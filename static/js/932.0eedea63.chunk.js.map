{"version":3,"file":"static/js/932.0eedea63.chunk.js","mappings":"gNA8FA,UAvFsB,WAAO,IAAD,QACxB,GAA0CA,EAAAA,EAAAA,UAAS,MAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KACOC,GAAWC,EAAAA,EAAAA,MAAXD,QACDE,GAAWC,EAAAA,EAAAA,MAMjB,IAJAC,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAWL,GAASM,KAAKP,EAC5B,GAAE,CAACC,IAECF,EAAL,CAIA,IACAS,EAMET,EANFS,YACAC,EAKEV,EALFU,eACAC,EAIEX,EAJFW,aACAC,EAGEZ,EAHFY,SACAC,EAEEb,EAFFa,aAIIC,EAFFd,EADFe,OAGuBC,KAAI,SAACC,GAAD,OAAWA,EAAMC,IAAjB,IAAuBC,KAAK,KAEnDC,EAAaP,EAAaQ,MAAM,IAAIC,MAAM,EAAG,GAAGH,KAAK,IACvDI,EAAgB,WAAOH,EAAP,KACpB,MAAqB,KAAjBP,EACwB,WAGxB,UAAC,IAAD,CAAKW,GAAG,OAAOC,GAAI,EAAGC,GAAI,EAA1B,WACE,SAAC,KAAD,CACAC,GAAIvB,EAASwB,SAASC,SAAS,UAA3B,UACKzB,EAAS0B,MAAMC,KAAKH,UADzB,OACoCxB,EAAS0B,MAAMC,KAAKC,QACtD,QAHN,mBAQI,UAAC,IAAD,CAAKC,QAAQ,OAAOC,QAAQ,OAAOC,GAAI,EAAGC,GAAI,EAAGC,EAAG,EAApD,WACJ,gBACEC,IAAG,0CAAqC7B,GACxC8B,IAAG,UAAK7B,GACR8B,OAAQ,OAEV,UAAC,IAAD,YACE,UAAC,IAAD,CAAKhB,GAAG,KAAKY,GAAI,EAAjB,UACG1B,EADH,IACoBa,MAEpB,UAAC,IAAD,CAAKC,GAAG,IAAIY,GAAI,EAAhB,0BACc,4BAAOK,KAAKC,MAAqB,GAAf/B,GAAlB,WAEd,SAAC,IAAD,CAAKa,GAAG,KAAKY,GAAI,EAAjB,uBAGA,SAAC,IAAD,CAAKZ,GAAG,IAAIY,GAAI,EAAhB,SACGxB,KAEH,SAAC,IAAD,CAAKY,GAAG,IAAIY,GAAI,EAAhB,qBAGE,uBAAItB,WAKV,mDACA,UAAC,IAAD,CAAKU,GAAG,KAAKa,EAAG,EAAGM,EAAG,EAAGR,GAAI,EAA7B,WACE,yBACI,SAAC,KAAD,CAAMR,GAAG,OAAOG,MAAO,CAAEC,KAAI,oBAAE3B,EAAS0B,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,IAAvD,qBAIH,yBACC,SAAC,KAAD,CAAMJ,GAAG,UAAUG,MAAO,CAAEC,KAAI,oBAAE3B,EAAS0B,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,IAA1D,2BAKF,SAAC,EAAAa,SAAD,WACE,SAAC,KAAD,QArEL,CA0EJ,C","sources":["pages/MovieDetalies.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useParams, Outlet, useLocation } from \"react-router-dom\";\nimport { getMovieId } from \"services/movieApi\";\nimport { Box } from \"Box\";\nimport { Link } from \"react-router-dom\";\nimport { Suspense } from \"react\";\n\nconst MovieDetalies = () => {\n    const [movieDetalies, setMovieDetalies] = useState(null);\n    const {movieId} = useParams();\n    const location = useLocation();\n    \n    useEffect(() => {\n        getMovieId(movieId).then(setMovieDetalies)\n    }, [movieId]);\n\n    if (!movieDetalies) {\n        return;\n    };\n\n    const {\n    poster_path,\n    original_title,\n    vote_average,\n    overview,\n    release_date,\n    genres,\n  } = movieDetalies;\n\n  const genreList = genres.map((genre) => genre.name).join(' ');\n  \n  const slicedDate = release_date.split('').slice(0, 4).join('');\n  let movieReleaseDate = `(${slicedDate})`;\n  if (release_date === '') {\n    return movieReleaseDate = 'Unknown';\n  }\n    return (\n      <Box as='main' pl={3} pt={0}>\n        <Link\n        to={location.pathname.includes('movies')\n            ? `${location.state.from.pathname}${location.state.from.search}`\n            : '/home'\n        }\n      >\n        Back\n      </Link>\n            <Box display=\"flex\" gridGap=\"20px\" mt={3} mb={3} p={0}>\n        <img\n          src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n          alt={`${original_title}`}\n          height={600}\n        />\n        <Box>\n          <Box as=\"h2\" mb={3}>\n            {original_title} {movieReleaseDate}\n          </Box>\n          <Box as=\"p\" mb={3}>\n            User score: <span>{Math.round(vote_average * 10)}%</span>\n          </Box>\n          <Box as=\"h3\" mb={3}>\n            Overview\n          </Box>\n          <Box as=\"p\" mb={3}>\n            {overview}\n          </Box>\n          <Box as=\"p\" mb={3}>\n            Genres\n          </Box>\n            <p>{genreList}</p>\n\n        </Box>\n      </Box>\n\n      <p>Additional information</p>\n      <Box as=\"ul\" p={0} m={0} mt={3}>\n        <li>\n            <Link to=\"cast\" state={{ from: location.state?.from ?? '' }}> \n            Cast\n          </Link>\n        </li>\n         <li>\n          <Link to=\"reviews\" state={{ from: location.state?.from ?? '' }}>\n            Reviews\n          </Link>\n        </li> \n        </Box>\n        <Suspense>\n          <Outlet />\n        </Suspense>  \n    \n        </Box>\n    );\n};\n\nexport default MovieDetalies;"],"names":["useState","movieDetalies","setMovieDetalies","movieId","useParams","location","useLocation","useEffect","getMovieId","then","poster_path","original_title","vote_average","overview","release_date","genreList","genres","map","genre","name","join","slicedDate","split","slice","movieReleaseDate","as","pl","pt","to","pathname","includes","state","from","search","display","gridGap","mt","mb","p","src","alt","height","Math","round","m","Suspense"],"sourceRoot":""}